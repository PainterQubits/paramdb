name: CI

on:
  push:
    branches:
      - \#4-add-github-actions
  pull_request:
    branches:
      - main

env:
  PYTHON_VERSION: "3.10"
  POETRY_VERSION: "1.3.2"

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get pip cache dir
        id: pip-cache-dir
        run: echo "cache-dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: Poetry cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache-dir.outputs.cache-dir }}
          key: poetry-cache-${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-poetry-${{ env.POETRY_VERSION }}

      - name: Install Poetry
        run: pipx install poetry==$POETRY_VERSION --python $(which python)

      - name: Set up Python with Poetry cache
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry

      # - name: Install dependencies
      #   run: poetry install

      # - name: Check Formatting (Black)
      #   run: poetry run black paramdb tests --check

      # - name: Lint (Flake8)
      #   run: poetry run flake8 paramdb tests

      # - name: Lint (Pylint)
      #   run: poetry run pylint paramdb tests

      # - name: Mypy cache
      #   uses: actions/cache@v3
      #   with:
      #     path: .mypy_cache
      #     key: mypy-cache-${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-${{ github.sha }}
      #     restore-keys: |
      #       mypy-cache-${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-

      # - name: Type Check (Mypy)
      #   run: poetry run mypy paramdb tests

      # - name: Test (Pytest)
      #   run: poetry run pytest paramdb tests
